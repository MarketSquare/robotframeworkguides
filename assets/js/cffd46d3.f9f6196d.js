"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6191],{4383:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var t=i(4848),n=i(8453);const r={},a="GitLab",o={id:"using_rf_in_ci_systems/ci/gitlab",title:"GitLab",description:"GitLab is a development platform that provides a Git repository manager providing wiki, issue-tracking and continuous integration and deployment pipeline features, using an open-source license, developed by GitLab Inc.",source:"@site/docs/using_rf_in_ci_systems/ci/gitlab.md",sourceDirName:"using_rf_in_ci_systems/ci",slug:"/using_rf_in_ci_systems/ci/gitlab",permalink:"/docs/using_rf_in_ci_systems/ci/gitlab",draft:!1,unlisted:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/using_rf_in_ci_systems/ci/gitlab.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u26d4 GitHub Actions",permalink:"/docs/using_rf_in_ci_systems/ci/github-actions"},next:{title:"Jenkins",permalink:"/docs/using_rf_in_ci_systems/ci/jenkins"}},c={},l=[{value:"Example",id:"example",level:2},{value:"Stages",id:"stages",level:2},{value:"Jobs",id:"jobs",level:2},{value:"Image",id:"image",level:2},{value:"Scripts",id:"scripts",level:2},{value:"Artifacts",id:"artifacts",level:2},{value:"Variables",id:"variables",level:2}];function d(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"gitlab",children:"GitLab"}),"\n",(0,t.jsx)(s.p,{children:"GitLab is a development platform that provides a Git repository manager providing wiki, issue-tracking and continuous integration and deployment pipeline features, using an open-source license, developed by GitLab Inc."}),"\n",(0,t.jsxs)(s.p,{children:["To set up a CI Pipeline which will run your (test) jobs on a GitLab Runner, you need to create a ",(0,t.jsx)(s.code,{children:".gitlab-ci.yml"})," file in the root of your repository. This file contains the configuration of your CI Pipeline."]}),"\n",(0,t.jsxs)(s.p,{children:["A CI Pipeline is a set of ",(0,t.jsx)(s.code,{children:"jobs"})," that are executed in a specific order.",(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.code,{children:"Stages"})," are used to group ",(0,t.jsx)(s.code,{children:"jobs"})," together and to define the order in which they are executed."]}),"\n",(0,t.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(s.p,{children:"An example for a CI Pipeline using a Dockerimage which runs Robot Framework jobs:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".gitlab-ci.yml"',children:"stages:\n  - smoke\n  - regression\n\nimage: marketsquare/robotframework-browser\n\nrun-smoke-tests:\n  stage: smoke\n  script:\n    - robot --outputdir reports tests/smoke\n  artifacts:\n    paths:\n      - reports\n\nrun-regression-tests:\n    stage: regression\n    script:\n        - robot --outputdir reports tests/regression\n    artifacts:\n        paths:\n            - reports\n"})}),"\n",(0,t.jsx)(s.h2,{id:"stages",children:"Stages"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".gitlab-ci.yml"',children:"stages:\n  - smoke\n  - regression\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The Pipeline has two stages: ",(0,t.jsx)(s.code,{children:"smoke"})," and ",(0,t.jsx)(s.code,{children:"regression"}),".",(0,t.jsx)(s.br,{}),"\n","The ",(0,t.jsx)(s.code,{children:"smoke"})," stage will be executed first, followed by the ",(0,t.jsx)(s.code,{children:"regression"})," stage.",(0,t.jsx)(s.br,{}),"\n","Each stage can contain multiple jobs which will be executed in parallel (within the same stage)."]}),"\n",(0,t.jsx)(s.h2,{id:"jobs",children:"Jobs"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".gitlab-ci.yml"',children:"run-smoke-tests:\n  stage: smoke\n  ...\n\nrun-regression-tests:\n  stage: regression\n  ...\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The job ",(0,t.jsx)(s.code,{children:"run-smoke-tests"})," is part of the ",(0,t.jsx)(s.code,{children:"smoke"})," stage.",(0,t.jsx)(s.br,{}),"\n","The job ",(0,t.jsx)(s.code,{children:"run-regression-tests"})," is part of the ",(0,t.jsx)(s.code,{children:"regression"})," stage."]}),"\n",(0,t.jsxs)(s.p,{children:["Each job can contain multiple ",(0,t.jsx)(s.code,{children:"scripts"})," which will be executed in sequence.",(0,t.jsx)(s.br,{}),"\n","The scripts are executed in the (Docker)",(0,t.jsx)(s.code,{children:"image"})," specified in the configuration."]}),"\n",(0,t.jsx)(s.h2,{id:"image",children:"Image"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".gitlab-ci.yml"',children:"image: marketsquare/robotframework-browser\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The image is used to run the jobs in the CI Pipeline. It is possible to use a different image for each job. The ",(0,t.jsx)(s.code,{children:"image"})," specified at the top of the configuration is used as the default image for all jobs (unless a job-specific image is specified).",(0,t.jsx)(s.br,{}),"\n","The default image used here is ",(0,t.jsx)(s.code,{children:"marketsquare/robotframework-browser"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"scripts",children:"Scripts"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".gitlab-ci.yml"',children:"script:\n  - robot --outputdir reports tests/smoke\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"script"})," is a list of commands that will be executed in sequence for the job.",(0,t.jsx)(s.br,{}),"\n","The ",(0,t.jsx)(s.code,{children:"script"})," specified here will run the Robot Framework tests in the ",(0,t.jsx)(s.code,{children:"tests/smoke"})," folder and will output the results in the ",(0,t.jsx)(s.code,{children:"reports"})," folder.",(0,t.jsx)(s.br,{}),"\n","It is possible to use multiple ",(0,t.jsx)(s.code,{children:"script"})," commands in a job."]}),"\n",(0,t.jsx)(s.p,{children:"For example:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".gitlab-ci.yml"',children:"script:\n  - pip install -r requirements.txt\n  - mkdir reports\n  - robot --outputdir reports tests/smoke\n"})}),"\n",(0,t.jsx)(s.h2,{id:"artifacts",children:"Artifacts"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".gitlab-ci.yml"',children:"artifacts:\n  paths:\n    - reports\n"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"artifacts"})," section is used to specify the files and folders that should be stored as artifacts after the job has finished.",(0,t.jsx)(s.br,{}),"\n","For example, you can store the test results (like the ",(0,t.jsx)(s.code,{children:"log.html"})," and ",(0,t.jsx)(s.code,{children:"report.html"})," files) as artifacts.",(0,t.jsx)(s.br,{}),"\n","Here, the ",(0,t.jsx)(s.code,{children:"reports"})," folder is stored as an artifact. It contains all the test results and screenshots.",(0,t.jsx)(s.br,{}),"\n","That's possible, because the ",(0,t.jsx)(s.code,{children:"--outputdir"})," in the ",(0,t.jsx)(s.code,{children:"robot"})," command was set to ",(0,t.jsx)(s.code,{children:"reports"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"robot --outputdir reports tests/smoke\n"})}),"\n",(0,t.jsx)(s.h2,{id:"variables",children:"Variables"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title=".gitlab-ci.yml"',children:'variables:\n  ROBOT_OPTIONS: "--variable BROWSER:chrome"\n\nrun-smoke-tests:\n    stage: smoke\n    script:\n        - robot --outputdir reports $ROBOT_OPTIONS tests/smoke\n    artifacts:\n        paths:\n        - reports\n'})}),"\n",(0,t.jsxs)(s.p,{children:["It is possible to define variables in the configuration, either at the top of the file or in a job.",(0,t.jsx)(s.br,{}),"\n","Also ",(0,t.jsx)(s.a,{href:"https://docs.gitlab.com/ee/ci/variables/predefined_variables.html",children:"predefined GitLab variables"})," or variables defined for your project settings can be used.",(0,t.jsx)(s.br,{}),"\n","Especially for handling secrets, it is recommended to use ",(0,t.jsx)(s.code,{children:"CI Variables"})," in your project settings."]}),"\n",(0,t.jsxs)(s.p,{children:["Check out the ",(0,t.jsx)(s.a,{href:"https://docs.gitlab.com/ee/ci/variables/",children:"GitLab CI Variables"})," documentation for more information."]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>o});var t=i(6540);const n={},r=t.createContext(n);function a(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);