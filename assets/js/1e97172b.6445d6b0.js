"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[377],{1758:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var o=s(4848),n=s(8453);const t={sidebar_label:"Project Structure",title:"Project Structure"},i=void 0,c={id:"examples/project_structure",title:"Project Structure",description:"Root Folder",source:"@site/docs/examples/project_structure.mdx",sourceDirName:"examples",slug:"/examples/project_structure",permalink:"/docs/examples/project_structure",draft:!1,unlisted:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/examples/project_structure.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Project Structure",title:"Project Structure"},sidebar:"tutorialSidebar",previous:{title:"MFA Login",permalink:"/docs/examples/mfa_login"},next:{title:"Restful Booker",permalink:"/docs/examples/restfulbooker"}},l={},d=[{value:"Root Folder",id:"root-folder",level:2},{value:"Test Suites",id:"test-suites",level:2},{value:"Resources",id:"resources",level:2},{value:"Libraries",id:"libraries",level:2},{value:"Examples",id:"examples",level:2},{value:"Simple Project with <code>tests/</code> and <code>resources/</code> folders:",id:"simple-project-with-tests-and-resources-folders",level:3},{value:"Project with <code>tests/</code>, <code>resources/</code> and <code>data/</code> folders:",id:"project-with-tests-resources-and-data-folders",level:3},{value:"Telling Robot Framework where to search libraries, resource and variable files",id:"telling-robot-framework-where-to-search-libraries-resource-and-variable-files",level:2},{value:"Good Practice: Use <code>--pythonpath</code> command line argument and <code>resources/</code> subfolder",id:"good-practice-use---pythonpath-command-line-argument-and-resources-subfolder",level:3},{value:"Run from shell",id:"run-from-shell",level:4},{value:"Run from IDE",id:"run-from-ide",level:4},{value:"Run from CI/CD",id:"run-from-cicd",level:4},{value:"Using CI_PROJECT_DIR variable",id:"using-ci_project_dir-variable",level:4},{value:"Resource file in the same directory as the Test Suite file",id:"resource-file-in-the-same-directory-as-the-test-suite-file",level:3},{value:"Using absolute paths with <code>${CURDIR}</code> and <code>resources/</code> subfolder",id:"using-absolute-paths-with-curdir-and-resources-subfolder",level:3},{value:"More subfolders means more <code>..</code> in the path",id:"more-subfolders-means-more--in-the-path",level:4},{value:"Using <code>--pythonpath</code> command line argument and <code>resources/</code> subfolder",id:"using---pythonpath-command-line-argument-and-resources-subfolder",level:3},{value:"Using <code>PYTHONPATH</code> environment variable",id:"using-pythonpath-environment-variable",level:3}];function a(e){const r={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"root-folder",children:"Root Folder"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"requirements.txt"})," - Python dependencies or"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"pyproject.toml"})," - Python dependencies"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"Readme.md"})," - Project description"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:".gitignore"})," - Lists files and folders to be ignored by git"]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["Depending on the project, the root folder can contain additional files, e.g. ",(0,o.jsx)(r.code,{children:".gitlab-ci.yml"})," for a GitLab CI Pipeline."]}),"\n",(0,o.jsx)(r.h2,{id:"test-suites",children:"Test Suites"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"Test Suites"})," are located in the ",(0,o.jsx)(r.code,{children:"tests/"})," folder.",(0,o.jsx)(r.br,{}),"\n","Depending on the project, the Test Suites can be organized in multiple ",(0,o.jsx)(r.code,{children:".robot"})," files and subfolders."]}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"tests/"})," - Test Suites folder","\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"search.robot"})," - Test Suite for Search functionality"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"login.robot"})," - Test Suite for Log In functionality"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"checkout/"})," - Folder containing Test Suites for Checkout","\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"checkout_basic.robot"})," - Test Suites for standard Checkout"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"checkout_premium.robot"})," - Test Suites for premium Checkout"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"resources",children:"Resources"}),"\n",(0,o.jsxs)(r.p,{children:["Reusable keywords are stored in ",(0,o.jsx)(r.code,{children:".resource"})," files in the ",(0,o.jsx)(r.code,{children:"resources"})," folder.",(0,o.jsx)(r.br,{}),"\n","Also ",(0,o.jsx)(r.code,{children:"Python"})," keywords in ",(0,o.jsx)(r.code,{children:".py"})," files can be stored there."]}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"resources/"})," - Reusable keywords","\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"common.robot"})," - General Keywords (e.g. Login/Logout, Navigation, ...) are stored here"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"search.robot"})," - Keywords for searching are stored here"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.code,{children:"utils.py"})," - Python helper keywords are stored here"]}),"\n",(0,o.jsx)(r.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(r.h2,{id:"libraries",children:"Libraries"}),"\n",(0,o.jsxs)(r.p,{children:["Custom Python Keyword libraries can be stored in a separate ",(0,o.jsx)(r.code,{children:"libraries/"})," folder, if needed.",(0,o.jsx)(r.br,{}),"\n","Some projects like to seperate the ",(0,o.jsx)(r.code,{children:"libraries/"})," from the ",(0,o.jsx)(r.code,{children:"resources/"}),"."]}),"\n",(0,o.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(r.p,{children:"Find some example project structures below."}),"\n",(0,o.jsxs)(r.h3,{id:"simple-project-with-tests-and-resources-folders",children:["Simple Project with ",(0,o.jsx)(r.code,{children:"tests/"})," and ",(0,o.jsx)(r.code,{children:"resources/"})," folders:"]}),"\n",(0,o.jsxs)(r.p,{children:["A flat project structure for a simple project with a few test cases and keywords.",(0,o.jsx)(r.br,{}),"\n","All test suites are in the ",(0,o.jsx)(r.code,{children:"tests/"})," folder and all keywords, variables and python libraries are in the ",(0,o.jsx)(r.code,{children:"resources/"})," folder.",(0,o.jsx)(r.br,{}),"\n","The project root folder contains the ",(0,o.jsx)(r.code,{children:".gitlab-ci.yml"})," file for CI/CD, the ",(0,o.jsx)(r.code,{children:".gitignore"})," file for git, the ",(0,o.jsx)(r.code,{children:"README.md"})," file for documentation and the ",(0,o.jsx)(r.code,{children:"requirements.txt"})," file for dependencies."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 suiteA.robot\n\u2502   \u251c\u2500\u2500 suiteB.robot\n\u2502   \u251c\u2500\u2500 ...\n\u2502   \n\u251c\u2500\u2500 resources\n\u2502   \u251c\u2500\u2500 common.resource\n\u2502   \u251c\u2500\u2500 some_other.resource\n\u2502   \u251c\u2500\u2500 custom_library.py\n\u2502   \u251c\u2500\u2500 variables.py\n\u2502   \u251c\u2500\u2500 ...\n\u2502\n\u251c\u2500\u2500 .gitlab-ci.yml\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements.txt\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/suiteA.robot file looks like this:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  resources/common.resource\nResource  resources/some_other.resource\nLibrary   resources/custom_library.py\nVariables resources/variables.py\n...\n"})}),"\n",(0,o.jsxs)(r.p,{children:["Tests can be run with the following command (assuming you are in the project root folder ",(0,o.jsx)(r.code,{children:"my_project"}),"):"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ robot --pythonpath . tests\n"})}),"\n",(0,o.jsxs)(r.h3,{id:"project-with-tests-resources-and-data-folders",children:["Project with ",(0,o.jsx)(r.code,{children:"tests/"}),", ",(0,o.jsx)(r.code,{children:"resources/"})," and ",(0,o.jsx)(r.code,{children:"data/"})," folders:"]}),"\n",(0,o.jsxs)(r.p,{children:["A project structure for a more complex project with a more test cases and keywords.",(0,o.jsx)(r.br,{}),"\n","Test Suites are organized in subfolders in the ",(0,o.jsx)(r.code,{children:"tests/"})," folder.\nKeywords, variables and python libraries are organized in subfolders in the ",(0,o.jsx)(r.code,{children:"resources/"})," folder.\nTest Data files - like Python or Yaml Variable files - are organized in subfolders in the ",(0,o.jsx)(r.code,{children:"data/"})," folder.",(0,o.jsx)(r.br,{}),"\n","The project root folder contains the ",(0,o.jsx)(r.code,{children:".gitlab-ci.yml"})," file for CI/CD, the ",(0,o.jsx)(r.code,{children:".gitignore"})," file for git, the ",(0,o.jsx)(r.code,{children:"README.md"})," file for documentation and the ",(0,o.jsx)(r.code,{children:"requirements.txt"})," file for dependencies."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 authentication\n\u2502   \u2502   \u251c\u2500\u2500 login.robot\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 master-data\n\u2502   \u2502   \u251c\u2500\u2500 customers.robot\n\u2502   \u2502   \u251c\u2500\u2500 products.robot\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 order\n\u2502   \u2502   \u251c\u2500\u2500 order_creation.robot\n\u2502   \u2502   \u251c\u2500\u2500 order_processing.robot\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \n\u251c\u2500\u2500 resources\n\u2502   \u251c\u2500\u2500 common.resource\n\u2502   \u251c\u2500\u2500 search.resource\n\u2502   \u251c\u2500\u2500 master-data\n\u2502   \u2502   \u251c\u2500\u2500 customers.resource\n\u2502   \u2502   \u251c\u2500\u2500 products.resource\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 ...\n\u2502\n\u251c\u2500\u2500 data\n\u2502   \u251c\u2500\u2500 master-data\n\u2502   \u2502   \u251c\u2500\u2500 customers.py\n\u2502   \u2502   \u251c\u2500\u2500 products.py\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 order\n\u2502   \u2502   \u251c\u2500\u2500 order_creation.yaml\n\u2502   \u2502   \u251c\u2500\u2500 order_processing.yaml\n\u2502   \u2502   \u251c\u2500\u2500 ...\n\u2502\n\u251c\u2500\u2500 .gitlab-ci.yml\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 requirements.txt\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/authentication/login.robot file looks like this:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  resources/common.resource\nResource  resources/search.resource\nResource  resources/master-data/customers.resource\nVariables data/master-data/customers.py\n...\n"})}),"\n",(0,o.jsxs)(r.p,{children:["Tests can be run with the following command (assuming you are in the project root folder ",(0,o.jsx)(r.code,{children:"my_project"}),"):"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ robot --pythonpath . tests\n"})}),"\n",(0,o.jsx)(r.h2,{id:"telling-robot-framework-where-to-search-libraries-resource-and-variable-files",children:"Telling Robot Framework where to search libraries, resource and variable files"}),"\n",(0,o.jsx)(r.p,{children:"Robot Framework searches for libraries, resource and variable files in"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"the same directory as the test suite file (or resource file) which imports the library, resource or variable file"}),"\n",(0,o.jsxs)(r.li,{children:["the directories listed in ",(0,o.jsx)(r.code,{children:"PYTHONPATH"})," environment variable"]}),"\n",(0,o.jsxs)(r.li,{children:["the directories passed in ",(0,o.jsx)(r.code,{children:"--pythonpath"})," command line argument"]}),"\n"]}),"\n",(0,o.jsx)(r.p,{children:"The examples below will focus on resource files, but the same applies to libraries and variables."}),"\n",(0,o.jsxs)(r.admonition,{type:"note",children:[(0,o.jsx)(r.mdxAdmonitionTitle,{}),(0,o.jsxs)(r.p,{children:["It is always possible to use absolute paths in the ",(0,o.jsx)(r.code,{children:"Resource"}),",",(0,o.jsx)(r.code,{children:"Library"})," and ",(0,o.jsx)(r.code,{children:"Variables"})," statements.",(0,o.jsx)(r.br,{}),"\n","Especially with the ",(0,o.jsx)(r.code,{children:"${CURDIR}"})," variable, it is easy to construct absolute paths relative to the current file.",(0,o.jsx)(r.br,{}),"\n","However, this is not recommended, as it makes the tests less portable."]})]}),"\n",(0,o.jsxs)(r.p,{children:["You can find more information about the search order in the ",(0,o.jsx)(r.a,{href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#configuring-where-to-search-libraries-and-other-extensions",children:"Robot Framework User Guide"}),"."]}),"\n",(0,o.jsxs)(r.h3,{id:"good-practice-use---pythonpath-command-line-argument-and-resources-subfolder",children:["Good Practice: Use ",(0,o.jsx)(r.code,{children:"--pythonpath"})," command line argument and ",(0,o.jsx)(r.code,{children:"resources/"})," subfolder"]}),"\n",(0,o.jsxs)(r.p,{children:["Before we look at the other options, let's look at the recommended approach.\nOrganize your files in subfolders (e.g. ",(0,o.jsx)(r.code,{children:"resources/"}),", ",(0,o.jsx)(r.code,{children:"libraries/"}),", ",(0,o.jsx)(r.code,{children:"data/"}),") and use the ",(0,o.jsx)(r.code,{children:"--pythonpath"})," command line argument to add the project root folder to the search path."]}),"\n",(0,o.jsxs)(r.p,{children:["In that case, resources can be imported with a relative path from the ",(0,o.jsx)(r.code,{children:"resources/"})," folder (e.g. ",(0,o.jsx)(r.code,{children:"Resource  resources/common.resource"}),") and libraries can be imported with a relative path from the ",(0,o.jsx)(r.code,{children:"libraries/"})," folder (e.g. ",(0,o.jsx)(r.code,{children:"Library  libraries/custom_library.py"}),")."]}),"\n",(0,o.jsx)(r.p,{children:"Let's assume we have the following project structure:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u2514\u2500\u2500 suiteA.robot\n\u2514\u2500\u2500 resources\n    \u251c\u2500\u2500 general.resource\n    \u2514\u2500\u2500 auth/\n        \u251c\u2500\u2500 login.resource\n        \u2514\u2500\u2500 totp.py\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/suiteA.robot file looks like this:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  resources/general.resource\nResource  resources/auth/login.resource\nLibrary   resources/auth/totp.py\n...\n"})}),"\n",(0,o.jsx)(r.h4,{id:"run-from-shell",children:"Run from shell"}),"\n",(0,o.jsxs)(r.p,{children:["You can run the tests with the following command (assuming you are in the project root folder ",(0,o.jsx)(r.code,{children:"my_project"}),"):"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ robot --pythonpath . tests/suiteA.robot\n"})}),"\n",(0,o.jsx)(r.admonition,{type:"tip",children:(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"."})," in the ",(0,o.jsx)(r.code,{children:"--pythonpath"}),' argument means "the current directory".',(0,o.jsx)(r.br,{}),"\n","In this case, the current directory is the project root folder ",(0,o.jsx)(r.code,{children:"my_project"}),"."]})}),"\n",(0,o.jsx)(r.h4,{id:"run-from-ide",children:"Run from IDE"}),"\n",(0,o.jsxs)(r.p,{children:["To run the tests directly from your IDE, you also need to configure the ",(0,o.jsx)(r.code,{children:"--pythonpath"})," argument in your IDE.",(0,o.jsx)(r.br,{}),"\n","In ",(0,o.jsx)(r.code,{children:"VS Code"})," with ",(0,o.jsx)(r.code,{children:"RobotCode"})," extension, you can add the following line to your ",(0,o.jsx)(r.code,{children:"settings.json"})," file.",(0,o.jsx)(r.br,{}),"\n","You can also find the setting under ",(0,o.jsx)(r.code,{children:"File > Preferences > Settings"})," by searching for ",(0,o.jsx)(r.code,{children:"robotcode.robot.pythonPath"}),"."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-json",children:'"robotcode.robot.pythonPath": [\n    "./"\n    ],\n'})}),"\n",(0,o.jsxs)(r.admonition,{type:"tip",children:[(0,o.jsxs)(r.p,{children:["You can also add the ",(0,o.jsx)(r.code,{children:"resources/"})," , ",(0,o.jsx)(r.code,{children:"lib/"})," or ",(0,o.jsx)(r.code,{children:"keyword/"})," folders  to the ",(0,o.jsx)(r.code,{children:"pythonPath"})," setting:"]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-json",children:'"robotcode.robot.pythonPath": [\n    "./",\n    "./lib",\n    "./resources",\n    "./keywords",\n    ],\n'})}),(0,o.jsxs)(r.p,{children:["That way, you can import libraries, resources and variables from the ",(0,o.jsx)(r.code,{children:"resources/"}),", ",(0,o.jsx)(r.code,{children:"lib/"})," and ",(0,o.jsx)(r.code,{children:"keyword/"})," folders without the ",(0,o.jsx)(r.code,{children:"resources/"}),", ",(0,o.jsx)(r.code,{children:"lib/"})," or ",(0,o.jsx)(r.code,{children:"keyword/"})," prefix."]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  general.resource\nResource  auth/login.resource\nLibrary   auth/totp.py\n...\n"})})]}),"\n",(0,o.jsx)(r.h4,{id:"run-from-cicd",children:"Run from CI/CD"}),"\n",(0,o.jsxs)(r.p,{children:["To run the tests from CI/CD, you also need to configure the ",(0,o.jsx)(r.code,{children:"--pythonpath"})," argument in your CI/CD pipeline."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"robot:\n  stage: test\n  image: python:3.8\n  script:\n    - pip install -r requirements.txt\n    - robot --pythonpath . tests/\n"})}),"\n",(0,o.jsx)(r.h4,{id:"using-ci_project_dir-variable",children:"Using CI_PROJECT_DIR variable"}),"\n",(0,o.jsxs)(r.p,{children:["If you are using GitLab CI/CD, you can use the ",(0,o.jsx)(r.code,{children:"CI_PROJECT_DIR"})," variable to construct the ",(0,o.jsx)(r.code,{children:"--pythonpath"})," argument.",(0,o.jsx)(r.br,{}),"\n","The ",(0,o.jsx)(r.code,{children:"CI_PROJECT_DIR"})," variable contains the absolute path to the project root folder."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-yaml",children:"robot:\n  stage: test\n  image: python:3.8\n  script:\n    - pip install -r requirements.txt\n    - robot --pythonpath $CI_PROJECT_DIR tests/\n"})}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h3,{id:"resource-file-in-the-same-directory-as-the-test-suite-file",children:"Resource file in the same directory as the Test Suite file"}),"\n",(0,o.jsx)(r.p,{children:"Let's assume we have the following project structure:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"my_project\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 suiteA.robot\n    \u2514\u2500\u2500 general.resource\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/suiteA.robot file looks like this:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  general.resource\n...\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/suiteA.robot file can import the general.resource file without any additional configuration."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ robot tests/suiteA.robot\n"})}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsxs)(r.h3,{id:"using-absolute-paths-with-curdir-and-resources-subfolder",children:["Using absolute paths with ",(0,o.jsx)(r.code,{children:"${CURDIR}"})," and ",(0,o.jsx)(r.code,{children:"resources/"})," subfolder"]}),"\n",(0,o.jsx)(r.p,{children:"Let's assume we have the following project structure:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u2514\u2500\u2500 suiteA.robot\n\u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 general.resource\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/suiteA.robot file looks like this:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  ${CURDIR}/../resources/general.resource\n...\n"})}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"${CURDIR}"})," variable contains the absolute path to the directory of the current file.",(0,o.jsx)(r.br,{}),"\n","The ",(0,o.jsx)(r.code,{children:".."}),' in the path means "one directory up".',(0,o.jsx)(r.br,{}),"\n","This way, the tests/suiteA.robot file can import the general.resource file without any additional configuration."]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ robot tests/suiteA.robot\n"})}),"\n",(0,o.jsxs)(r.h4,{id:"more-subfolders-means-more--in-the-path",children:["More subfolders means more ",(0,o.jsx)(r.code,{children:".."})," in the path"]}),"\n",(0,o.jsx)(r.p,{children:"Let's assume we have the following project structure:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 suiteA.robot\n\u2502   \u2514\u2500\u2500 topicB\n\u2502       \u2514\u2500\u2500 suiteB.robot\n\u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 auth\n        \u2514\u2500\u2500 login.resource\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/suiteA.robot file looks like this:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  ${CURDIR}/../resources/auth/login.resource\n...\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/topicB/suiteB.robot file looks like this:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  ${CURDIR}/../../resources/auth/login.resource\n...\n"})}),"\n",(0,o.jsxs)(r.p,{children:["You can see that the number of ",(0,o.jsx)(r.code,{children:".."})," in the path depends on the number of subfolders between the test suite file and the resource file.",(0,o.jsx)(r.br,{}),"\n","Because of that, it is recommended to use the ",(0,o.jsx)(r.code,{children:"--pythonpath"})," command line argument instead of absolute paths."]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsxs)(r.h3,{id:"using---pythonpath-command-line-argument-and-resources-subfolder",children:["Using ",(0,o.jsx)(r.code,{children:"--pythonpath"})," command line argument and ",(0,o.jsx)(r.code,{children:"resources/"})," subfolder"]}),"\n",(0,o.jsx)(r.p,{children:"Let's assume we have the following project structure:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"my_project\n\u251c\u2500\u2500 tests\n\u2502   \u2514\u2500\u2500 suiteA.robot\n\u2514\u2500\u2500 resources\n    \u2514\u2500\u2500 general.resource\n"})}),"\n",(0,o.jsx)(r.p,{children:"The tests/suiteA.robot file looks like this:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  resources/general.resource\n...\n"})}),"\n",(0,o.jsx)(r.p,{children:"To run the tests, we need to tell Robot Framework where to search for the libraries, resource and variable files.\nIf we run it without any arguments, we will get an error:"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ robot tests/suiteA.robot\n[Error] Error in file 'tests/suiteA.robot': ...\nResource file 'resources/general.resource' does not exist.\n...\n"})}),"\n",(0,o.jsxs)(r.p,{children:["We can add the project root folder ",(0,o.jsx)(r.code,{children:"my_project/"})," folder to the ",(0,o.jsx)(r.code,{children:"--pythonpath"})," command line argument:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ robot --pythonpath . tests/suiteA.robot\n"})}),"\n",(0,o.jsx)(r.p,{children:"Now the tests run successfully."}),"\n",(0,o.jsxs)(r.admonition,{type:"tip",children:[(0,o.jsxs)(r.p,{children:["You can also add the ",(0,o.jsx)(r.code,{children:"resources/"})," , ",(0,o.jsx)(r.code,{children:"lib/"})," or ",(0,o.jsx)(r.code,{children:"keyword/"})," folders  to the ",(0,o.jsx)(r.code,{children:"--pythonpath"})," setting:"]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ robot --pythonpath .:./lib:./resources:./keywords tests/suiteA.robot\n"})}),(0,o.jsxs)(r.p,{children:["That way, you can import libraries, resources and variables from the ",(0,o.jsx)(r.code,{children:"resources/"}),", ",(0,o.jsx)(r.code,{children:"lib/"})," and ",(0,o.jsx)(r.code,{children:"keyword/"})," folders without the ",(0,o.jsx)(r.code,{children:"resources/"}),", ",(0,o.jsx)(r.code,{children:"lib/"})," or ",(0,o.jsx)(r.code,{children:"keyword/"})," prefix."]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-robotframework",children:"*** Settings ***\nResource  general.resource\nResource  auth/login.resource\nLibrary   auth/totp.py\n...\n"})})]}),"\n",(0,o.jsxs)(r.h3,{id:"using-pythonpath-environment-variable",children:["Using ",(0,o.jsx)(r.code,{children:"PYTHONPATH"})," environment variable"]}),"\n",(0,o.jsxs)(r.p,{children:["Alternatively, you can add the path to your project root folder to the ",(0,o.jsx)(r.code,{children:"PYTHONPATH"})," environment variable.",(0,o.jsx)(r.br,{}),"\n","Then you can run the tests without the ",(0,o.jsx)(r.code,{children:"--pythonpath"})," command line argument (assuming you are in the project root folder ",(0,o.jsx)(r.code,{children:"my_project"}),"):"]}),"\n",(0,o.jsx)(r.p,{children:"Bash"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-shell",children:"$ export PYTHONPATH=$PYTHONPATH:.\n$ robot tests/suiteA.robot\n"})}),"\n",(0,o.jsx)(r.p,{children:"PowerShell"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-powershell",children:'> $env:PYTHONPATH += ";."\n> robot tests/suiteA.robot\n'})})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>c});var o=s(6540);const n={},t=o.createContext(n);function i(e){const r=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);