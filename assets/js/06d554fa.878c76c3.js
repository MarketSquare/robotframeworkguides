"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[924],{6904:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=s(4848),n=s(8453);const r={sidebar_label:"Variables",title:"Variables"},t=void 0,l={id:"variables",title:"Variables",description:"This page summarizes the most important information about variables in Robot Framework.",source:"@site/docs/variables.mdx",sourceDirName:".",slug:"/variables",permalink:"/docs/variables",draft:!1,unlisted:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/variables.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Variables",title:"Variables"},sidebar:"tutorialSidebar",previous:{title:"DataDriven Tests",permalink:"/docs/testcase_styles/datadriven"}},o={},c=[{value:"*** Variables *** Section",id:"-variables--section",level:2},{value:"Set Variables in Test Cases and Keywords",id:"set-variables-in-test-cases-and-keywords",level:2},{value:"When to use $ and @ and &amp; and %?",id:"when-to-use--and--and--and-",level:2},{value:"Variable Files",id:"variable-files",level:2}];function d(e){const a={a:"a",br:"br",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components},{Details:s}=a;return s||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a.p,{children:["This page summarizes the most important information about variables in Robot Framework.",(0,i.jsx)(a.br,{}),"\n","For more information, please refer to the official ",(0,i.jsx)(a.a,{href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#variables",children:"Robot Framework User Guide"}),"."]}),"\n",(0,i.jsx)(a.h2,{id:"-variables--section",children:"*** Variables *** Section"}),"\n",(0,i.jsxs)(a.p,{children:["Variables which are defined in the *** Variables *** section are available in all test cases and keywords in the same file.",(0,i.jsx)(a.br,{}),"\n","Variables defined in the *** Variables *** section are ",(0,i.jsx)(a.strong,{children:"suite"})," variables.",(0,i.jsx)(a.br,{}),"\n","If a ",(0,i.jsx)(a.code,{children:".resource"})," or a ",(0,i.jsx)(a.code,{children:".robot"})," file with a *** Variables *** section is imported into a test suite, the variables there also become ",(0,i.jsx)(a.strong,{children:"suite"})," variables."]}),"\n",(0,i.jsx)(a.p,{children:"Example:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-robotframework",children:"*** Variables ***\n${my_var}     my_value\n@{my_list}    Apple    Banana    Orange\n&{my_dict}    name=my_value1    password=my_value2\n\n*** Test Cases ***\nTest Case 1\n    Log    ${my_var}\n    Log    ${my_list}\n    Log    ${my_dict}\n    FOR    ${item}    IN    @{my_list}\n        Log    ${item}\n    END\n    Log    ${my_dict}[name]\n    Log    ${my_dict}[password]\n    FOR   ${key}    ${value}    IN    &{my_dict}\n        Log Many    ${key}    ${value}\n    END\n    My Keyword\n\n*** Keywords ***\nMy Keyword\n    Log Many    ${my_var}    ${my_list}    ${my_dict}    \n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Let me run it"}),(0,i.jsx)("iframe",{src:"https://robotframework.org/embed/?code-gh-url=https://github.com/MarketSquare/robotframeworkguides/tree/main/code-examples/standard_library/variables_section",width:"100%",height:"600"})]}),"\n",(0,i.jsx)(a.h2,{id:"set-variables-in-test-cases-and-keywords",children:"Set Variables in Test Cases and Keywords"}),"\n",(0,i.jsx)(a.p,{children:"Besides the *** Variables *** section, variables can also be set dynamically in test cases and keywords.\nVariables are set by the return value of a keyword.\nThere are some Keywords which set variables values explicitly, like"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.a,{href:"https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Variable",children:"Set Variable"})}),"\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.a,{href:"https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Test%20Variable",children:"Set Test Variable"})}),"\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.a,{href:"https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Suite%20Variable",children:"Set Suite Variable"})}),"\n",(0,i.jsx)(a.li,{children:(0,i.jsx)(a.a,{href:"https://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Global%20Variable",children:"Set Global Variable"})}),"\n"]}),"\n",(0,i.jsxs)(a.p,{children:["They can be used to either ",(0,i.jsx)(a.strong,{children:"set a value"})," of a variable or ",(0,i.jsx)(a.strong,{children:"change the scope"})," of a variable."]}),"\n",(0,i.jsx)(a.p,{children:"Example:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-robotframework",children:"*** Test Cases ***\n\nTest Case 1\n    ${my_local_var}    Set Variable    Hello World\n    Log    ${my_local_var}    # Pass: Logs the value of the variable\n    Set Suite Variable    ${my_suite_var}    I'm a suite variable\n    Set Global Variable    ${my_global_var}    I'm a global variable\n\nTest Case 2\n    Log    ${my_local_var}    # Fails: Variable only exists in the scope of Test Case 1\n    Log    ${my_suite_var}    # Pass: Variable exists for the scope of the whole suite\n    Log    ${my_global_var}   # Pass: Variable exists for the scope of the whole test run\n\nTest Case 3\n    My Keyword\n    Log    ${my_keyword_var}    # Fails: Variable only exists in the scope of My Keyword\n    Log    ${my_test_var}    # Pass: Variable  exists in the scope of the test case\n\n*** Keywords ***\nMy Keyword\n    ${my_keyword_var}    Set Variable    Hello Keyword\n    Log    ${my_keyword_var}    # Pass: Logs the value of the variable\n    Set Test Variable    ${my_test_var}    I'm a test case variable   \n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Let me run it"}),(0,i.jsx)("iframe",{src:"https://robotframework.org/embed/?code-gh-url=https://github.com/MarketSquare/robotframeworkguides/tree/main/code-examples/standard_library/variable_scopes",width:"100%",height:"600"})]}),"\n",(0,i.jsx)(a.h2,{id:"when-to-use--and--and--and-",children:"When to use $ and @ and & and %?"}),"\n",(0,i.jsx)(a.p,{children:"Variable Names consist of"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:["a variable type identifier (e.g. ",(0,i.jsx)(a.code,{children:"$"}),", ",(0,i.jsx)(a.code,{children:"@"}),", ",(0,i.jsx)(a.code,{children:"&"}),", ",(0,i.jsx)(a.code,{children:"%"}),")"]}),"\n",(0,i.jsxs)(a.li,{children:["curly braces ",(0,i.jsx)(a.code,{children:"{}"})]}),"\n",(0,i.jsxs)(a.li,{children:["a variable name (e.g. ",(0,i.jsx)(a.code,{children:"my_var"}),", ",(0,i.jsx)(a.code,{children:"my_list"}),", ",(0,i.jsx)(a.code,{children:"my_dict"}),", ",(0,i.jsx)(a.code,{children:"my_var2"}),")"]}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"The variable type identifier is used to define the type of the variable."}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"$"})," is used for scalar variables."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"@"})," is used for list variables."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"&"})," is used for dictionary variables."]}),"\n",(0,i.jsxs)(a.li,{children:[(0,i.jsx)(a.code,{children:"%"})," is used for environment variables."]}),"\n"]}),"\n",(0,i.jsxs)(a.p,{children:["What is the difference between a scalar variable, a list variable and a dictionary?",(0,i.jsx)(a.br,{}),"\n","A scalar variable can only contain ",(0,i.jsx)(a.strong,{children:"one value"}),".",(0,i.jsx)(a.br,{}),"\n","A list variable can contain ",(0,i.jsx)(a.strong,{children:"multiple values"}),".",(0,i.jsx)(a.br,{}),"\n","A dictionary variable can contain ",(0,i.jsx)(a.strong,{children:"multiple key-value pairs"}),"."]}),"\n",(0,i.jsxs)(a.p,{children:["But why can we access a list variable ",(0,i.jsx)(a.code,{children:"my_list"})," with the syntax ",(0,i.jsx)(a.code,{children:"${my_list}"})," and also with the syntax ",(0,i.jsx)(a.code,{children:"@{my_list}"}),"?"]}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:"${my_list}"})," accesses the whole list object ",(0,i.jsx)(a.code,{children:"my_list"}),". It is a container and holds all the items of the list.\nYou can use it to access the whole list variable ",(0,i.jsx)(a.code,{children:"my_list"})," or to access a specific item of the list with the syntax ",(0,i.jsx)(a.code,{children:"${my_list}[index]"}),"."]}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:"@{my_list}"})," accesses the items of the list variable ",(0,i.jsx)(a.code,{children:"my_list"}),". It is like the list variable ",(0,i.jsx)(a.code,{children:"my_list"})," is unpacked and all the items are available as individual variables."]}),"\n",(0,i.jsx)(a.p,{children:"Example:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-robotframework",children:"*** Variables ***\n@{my_list}    Apple    Banana    Orange\n\n*** Test Cases ***\nTest Case 1\n    Log    ${my_list}   # Pass: Logs the whole list object\n    Log Many    @{my_list}   # Pass: Logs the items of the list object\n    Log Many    ${my_list}   # Pass: Logs the whole list object\n    Log List    ${my_list}   # Pass: Logs the whole list object\n    Log    ${my_list}[0]    # Pass: Logs the first item of the list object\n    Log    @{my_list}[0]    # Fail: @{my_list} is not a list object and does not have an index\n    Log    @{my_list}       # Fail: The second argument of the Log keyword `level` only allows the values `TRACE`, `DEBUG`, `INFO`, `WARN`, `ERROR`, `NONE`.\n                            # The value `Banana` for the argument `level` is not allowed.\n    Log    ${my_list}[0]    ${my_list}[1]   ${my_list}[2]   # Fail: Same as above    \n    FOR    ${item}    IN    @{my_list}  # Pass: Iterates over the items of the list object\n        Log    ${item}                  # Pass: Logs the items of the list object   \n    END\n"})}),"\n",(0,i.jsxs)(a.p,{children:["Whenever you want to access the container of a list variable, you have to use the syntax ",(0,i.jsx)(a.code,{children:"${my_list}"}),".",(0,i.jsx)(a.br,{}),"\n","When you want to break down the list variable into its items, you have to use the syntax ",(0,i.jsx)(a.code,{children:"@{my_list}"}),"."]}),"\n",(0,i.jsxs)(a.p,{children:["It's like a beer crate with bottles inside.",(0,i.jsx)(a.br,{}),"\n","With the syntax ",(0,i.jsx)(a.code,{children:"${beer_crate}"})," you can access the whole beer crate.",(0,i.jsx)(a.br,{}),"\n","With the syntax ",(0,i.jsx)(a.code,{children:"@{beer_crate}"})," you get the bottles.",(0,i.jsx)(a.br,{}),"\n","With the syntax ",(0,i.jsx)(a.code,{children:"${beer_crate}[index]"})," you get a specific bottle inside the crate."]}),"\n",(0,i.jsx)(a.h2,{id:"variable-files",children:"Variable Files"}),"\n",(0,i.jsxs)(a.p,{children:["It is possible to load variables from external files, like Python (",(0,i.jsx)(a.code,{children:".py"}),") or ",(0,i.jsx)(a.code,{children:".yaml"})," files.",(0,i.jsx)(a.br,{}),"\n","For Yaml files, the package ",(0,i.jsx)(a.code,{children:"pyyaml"})," is required."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-shell",children:"pip install pyyaml\n"})}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:".py"})," files will be interpreted as Python Code, so you can create simple variables, lists or dictionaries and even complex objects like classes."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",metastring:'title="PythonVariables.py"',children:"class TestEnv:\n    ip = '123.4.5.6'\n    user = 'robot'\n    roles = ['admin', 'user']\n\nmy_var = 'Hello World'\nmy_list = [\"Apple\", \"Banana\", \"Cherry\"]\nmy_dict = {'name': 'John', 'age': 36}\n"})}),"\n",(0,i.jsx)(a.p,{children:"Even dynamic variables using are possible by executing any Python code inside the variable file."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-python",metastring:'title="DynamicVariables.py"',children:"import os\nimport random\nimport time\nimport math\n\nUSER = os.getlogin()                # current login name\nRANDOM_INT = random.randint(0, 10)  # random integer in range [0,10]\nCURRENT_TIME = time.asctime()       # timestamp like 'Thu Apr  6 12:45:21 2006'\nif time.localtime()[3] > 12:\n    AFTERNOON = True\nelse:\n    AFTERNOON = False\n\ndef get_area(diameter):\n    radius = diameter / 2\n    area = math.pi * radius * radius\n    return area\n\nAREA1 = get_area(1)\nAREA2 = get_area(2)\n"})}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:".yaml"})," (or ",(0,i.jsx)(a.code,{children:".yml"}),") files will be interpreted as a dictionary."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-yaml",metastring:'title="YamlVariables.yml"',children:"# These are scalars:\nbase_url: https://qaserver.mycompany.com:8080\nadmin_user: iAmAdMiN\nadmin_password: eieioscoobydoo1234\n# Now, a list:\nyaml_list:\n     - Item 1\n     - Item two\n     - 3\n# Finally, a dictionary:\nyaml_dict:\n     key_1: A string\n     key_2: 1 # an int\n"})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-robotframework",metastring:'title="TestSuite.robot"',children:"*** Settings ***\nVariables    PythonVariables.py\nVariables    YamlVariables.yaml\nVariables    DynamicVariables.py\n\n*** Test Cases ***\nAccess Python Variables\n    Log   ${TestEnv.ip}\n    Log    ${TestEnv.roles}\n    Log Many   @{TestEnv.roles}\n    Log    ${my_var}\n    Log Many   @{my_list}\n    Log Many   &{my_dict}\n    FOR    ${item}    IN    @{my_list}\n        Log    ${item}\n    END\n\nAccess Yaml Variables\n    Log        ${base_url}\n    Log Many   @{yaml_list}\n    Log        ${yaml_dict}\n    Log        ${yaml_dict}[key_1]\n\nAccess Dynamic Variables\n    Log   ${USER}\n    Log   ${RANDOM_INT}\n    Log   ${CURRENT_TIME}\n    Log   ${AFTERNOON}\n    Log   ${AREA1}\n    Log   ${AREA2}\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Let me run it"}),(0,i.jsx)("iframe",{src:"https://robotframework.org/embed/?code-gh-url=https://github.com/MarketSquare/robotframeworkguides/tree/main/code-examples/standard_library/variable_files",width:"100%",height:"600"})]})]})}function h(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,a,s)=>{s.d(a,{R:()=>t,x:()=>l});var i=s(6540);const n={},r=i.createContext(n);function t(e){const a=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),i.createElement(r.Provider,{value:a},e.children)}}}]);