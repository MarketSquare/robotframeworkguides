"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7350],{3669:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var s=t(4848),r=t(8453);const i={},a="Listener Interface",l={id:"extending_robot_framework/listeners_prerun_api/listeners",title:"Listener Interface",description:"Listeners can  listen \ud83d\udc42 to the events that are fired during the execution of a test suite and react to them.",source:"@site/docs/extending_robot_framework/listeners_prerun_api/listeners.md",sourceDirName:"extending_robot_framework/listeners_prerun_api",slug:"/extending_robot_framework/listeners_prerun_api/listeners",permalink:"/docs/extending_robot_framework/listeners_prerun_api/listeners",draft:!1,unlisted:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/extending_robot_framework/listeners_prerun_api/listeners.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/extending_robot_framework/listeners_prerun_api/overview"},next:{title:"PreRunModifier",permalink:"/docs/extending_robot_framework/listeners_prerun_api/prerunmodifier"}},o={},d=[{value:"Interface Versions - v2 and v3",id:"interface-versions---v2-and-v3",level:2},{value:"Using Listeners",id:"using-listeners",level:2},{value:"Class or Module",id:"class-or-module",level:3},{value:"Listener Templates",id:"listener-templates",level:2},{value:"Example Listeners",id:"example-listeners",level:2},{value:"Stop on Failure Listener",id:"stop-on-failure-listener",level:3},{value:"Report Listener",id:"report-listener",level:3}];function c(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"listener-interface",children:"Listener Interface"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Listeners"})," can  ",(0,s.jsx)(n.em,{children:"listen"})," \ud83d\udc42 to the events that are fired during the execution of a test suite and react to them.",(0,s.jsx)(n.br,{}),"\n","They are like a ",(0,s.jsx)(n.em,{children:"hook"})," \ud83e\ude9d into the test run, allowing us to execute code at a specific point in time during the execution.",(0,s.jsx)(n.br,{}),"\n","You can use them to e.g. notify other systems about the progress of your test suite in real time.",(0,s.jsx)(n.br,{}),"\n","Examples of events that can be listened to are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Test Suite Started"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Test Suite Ended"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Test Started"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Test Ended"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Keyword Started"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Keyword Ended"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Message"})}),"\n",(0,s.jsx)(n.li,{children:"..."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"One advantage of using a Listener instead of a Custom Library is that you are very flexible. You can enable/disable the Listener for every test execution without modifying your tests. Listeners will just run in the background and do their job."}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsx)(n.a,{href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#listener-interface",children:"Robot Framework User Guide"})," for more information."]}),"\n",(0,s.jsx)(n.h2,{id:"interface-versions---v2-and-v3",children:"Interface Versions - v2 and v3"}),"\n",(0,s.jsx)(n.p,{children:"There are two versions of the Listener Interface - v2 and v3."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#listener-interface-methods",children:"Listener Interface Versions"})}),"\n",(0,s.jsxs)(n.p,{children:["Inside the Listener file, you need to define a variable called ",(0,s.jsx)(n.code,{children:"ROBOT_LISTENER_API_VERSION"})," and set it to either ",(0,s.jsx)(n.code,{children:"2"})," or ",(0,s.jsx)(n.code,{children:"3"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Examples:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"ROBOT_LISTENER_API_VERSION = 2\n\ndef end_test(name, attrs):\n    if attrs['status'] == 'FAIL':\n        print('Test \"%s\" failed: %s' % (name, attrs['message']))\n        input('Press enter to continue.')\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"ROBOT_LISTENER_API_VERSION = 3\n\ndef end_test(data, result):\n    if not result.passed:\n        print('Test \"%s\" failed: %s' % (result.name, result.message))\n        input('Press enter to continue.')\n"})}),"\n",(0,s.jsx)(n.p,{children:"One main difference between both versions is:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["v2 allows you to ",(0,s.jsx)(n.strong,{children:"read"})," the attributes of the test case, keyword, etc.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"main purpose is reporting and monitoring the execution of the test suite"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["v3 also allows you to ",(0,s.jsx)(n.strong,{children:"read"})," and ",(0,s.jsx)(n.strong,{children:"modify"})," the attributes of the test case, keyword, etc.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"changes will have a direct effect on the execution of the test suite"}),"\n",(0,s.jsx)(n.li,{children:"beside reporting and monitoring, you can use it to e.g. skip tests, modify test data, etc."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["However, some methods like ",(0,s.jsx)(n.code,{children:"library_import"}),", ",(0,s.jsx)(n.code,{children:"resource_import"})," and ",(0,s.jsx)(n.code,{children:"variables_import"})," are only available in the v2."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#listener-version-2",children:"Listener v2 methods"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#listener-version-3",children:"Listener v3 methods"})}),"\n",(0,s.jsx)(n.h2,{id:"using-listeners",children:"Using Listeners"}),"\n",(0,s.jsxs)(n.p,{children:["Start your test suite with the ",(0,s.jsx)(n.code,{children:"--listener"})," option and the path to the listener file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"robot --listener path/to/listener.py tests\n"})}),"\n",(0,s.jsx)(n.h3,{id:"class-or-module",children:"Class or Module"}),"\n",(0,s.jsxs)(n.p,{children:["You can use a Listener as a class or as a module.",(0,s.jsx)(n.br,{}),"\n","When using a class, I recommend to use the same name for the class and the file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="ListenerClass.py"',children:"\nClass ListenerClass:\n\n    ROBOT_LISTENER_API_VERSION = 3\n\n    def __init__(self):\n        pass\n\n    def start_suite(self, data, result):\n        pass\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="ListenerModule.py"',children:"\ndef start_suite(data, result):\n    pass\n"})}),"\n",(0,s.jsx)(n.h2,{id:"listener-templates",children:"Listener Templates"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the following templates to create your own Listener.",(0,s.jsx)(n.br,{}),"\n","Just copy the code and paste it into a new file.",(0,s.jsx)(n.br,{}),"\n","Add your own code to the methods you want to use.",(0,s.jsx)(n.br,{}),"\n","Remove the methods you don't need."]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Listener Template v2"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="RobotListenerV2.py"',children:'from robot.libraries.BuiltIn import BuiltIn\n\nb = BuiltIn()\n\nclass RobotListenerV2:\n\n    ROBOT_LISTENER_API_VERSION = 2\n    ROBOT_LIBRARY_SCOPE = "GLOBAL"\n\n    def __init__(self):\n        self.ROBOT_LIBRARY_LISTENER = self\n        pass\n\n    def start_suite(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def start_test(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def start_keyword(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def end_keyword(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def end_test(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def end_suite(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def log_message(self, message):\n        print(message)\n        pass\n\n    def message(self, message):\n        print(message)\n\n        pass\n\n    def library_import(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def resource_import(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def variables_import(self, name, attrs):\n        print(name)\n        print(attrs)\n        pass\n\n    def output_file(self, path):\n        print(path)\n        pass\n\n    def log_file(self, path):\n        print(path)\n        pass\n\n    def report_file(self, path):\n        print(path)\n        pass\n\n    def xunit_file(self, path):\n        print(path)\n        pass\n\n    def debug_file(self, path):\n        print(path)\n        pass\n\n    def close(self):\n        pass\n'})})]}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"Listener Template v3"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="RobotListenerV3.py"',children:'from robot.libraries.BuiltIn import BuiltIn\n\n\nclass RobotListenerV3:\n\n    ROBOT_LIBRARY_SCOPE = "GLOBAL"\n    ROBOT_LISTENER_API_VERSION = 3\n\n    def __init__(self):\n        pass\n\n    def start_suite(self, suite, result):\n        pass\n\n    def start_test(self, test, result):\n        pass\n\n    def end_test(self, test, result):\n        pass\n\n    def end_suite(self, suite, result):\n        pass\n\n    def log_message(self, message):\n        pass\n\n    def message(self, message):\n        pass\n\n    def debug_file(self, path):\n        pass\n\n    def output_file(self, path):\n        pass\n\n    def xunit_file(self, path):\n        pass\n\n    def log_file(self, path):\n        pass\n\n    def report_file(self, path):\n        pass\n\n    def close(self):\n        pass\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"example-listeners",children:"Example Listeners"}),"\n",(0,s.jsx)(n.h3,{id:"stop-on-failure-listener",children:"Stop on Failure Listener"}),"\n",(0,s.jsx)(n.p,{children:"A Listener which stops the execution of the test suite if a test fails."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="listener.py"',children:'"""Listener that stops execution if a test fails."""\n\nROBOT_LISTENER_API_VERSION = 3\n\ndef end_test(data, result):\n    if not result.passed:\n        print(\'Test "%s" failed: %s\' % (result.name, result.message))\n        input(\'Press enter to continue.\')\n'})}),"\n",(0,s.jsx)(n.h3,{id:"report-listener",children:"Report Listener"}),"\n",(0,s.jsx)(n.p,{children:"A Listener which writes the name and status of each test to a file."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",metastring:'title="ReportListener.py"',children:'class ReportListener:\n    ROBOT_LISTENER_API_VERSION = 3\n\n    def __init__(self, filename=\'report.md\'):\n        self.filename = filename\n        self.fh = open(self.filename, \'w\')\n        self.fh.write("# Robot Framework Report\\n")\n        self.fh.write("|Test|Status|\\n")\n        self.fh.write("|---|---|\\n")\n\n    def close(self):\n        self.fh.close()\n\n    def end_test(self, data, result):\n        self.fh.write(f"|{result.name}|{result.status}|\\n")\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"robot --listener ReportListener.py tests\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);