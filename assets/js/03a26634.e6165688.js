"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2736],{964:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=s(4848),n=s(8453);const i={sidebar_label:"Parsing Test Results",title:"Parsing Test Results"},o=void 0,l={id:"parsing_results",title:"Parsing Test Results",description:"Robot Framework can create different output files after a test run.",source:"@site/docs/parsing_results.md",sourceDirName:".",slug:"/parsing_results",permalink:"/docs/parsing_results",draft:!1,unlisted:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/parsing_results.md",tags:[],version:"current",frontMatter:{sidebar_label:"Parsing Test Results",title:"Parsing Test Results"},sidebar:"tutorialSidebar",previous:{title:"Running tests in parallel",permalink:"/docs/parallel"},next:{title:"Report Portal",permalink:"/docs/reporting_test_results/report_portal"}},a={},d=[{value:"Reading results using the RF API",id:"reading-results-using-the-rf-api",level:2},{value:"Getting result statistics",id:"getting-result-statistics",level:2},{value:"Robot Framework Report",id:"robot-framework-report",level:3},{value:"More information",id:"more-information",level:3}];function c(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Robot Framework can create different output files after a test run."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"output.xml"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"log.html"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"report.html"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"xunit.xml"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Sometimes you want to parse your test results, e.g. because you want to transfer them to a different system (like a test management tool)."}),"\n",(0,r.jsxs)(t.admonition,{type:"tip",children:[(0,r.jsx)(t.mdxAdmonitionTitle,{}),(0,r.jsx)(t.p,{children:"Don't try to parse the .xml files using some python xml module."})]}),"\n",(0,r.jsxs)(t.p,{children:["Instead, use the ",(0,r.jsx)(t.strong,{children:"Robot Framework API"})," which allows you to get details about the executed tests, keywords, their data and the results much easier.",(0,r.jsx)(t.br,{}),"\n","You can find the documentation for the results model ",(0,r.jsx)(t.a,{href:"https://robot-framework.readthedocs.io/en/stable/autodoc/robot.result.html?highlight=Resultvisitor#",children:"here"}),".\r\nEspecially the ",(0,r.jsx)(t.a,{href:"https://robot-framework.readthedocs.io/en/stable/autodoc/robot.result.html?highlight=Resultvisitor%20#module-robot.result.visitor",children:"ResultVisitor"})," will allow you to access and modify your results at different points in time, e.g. when"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"a test suite starts/ends"}),"\n",(0,r.jsx)(t.li,{children:"a test case starts/ends"}),"\n",(0,r.jsx)(t.li,{children:"a keyword starts/ends"}),"\n",(0,r.jsx)(t.li,{children:"..."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Check the ",(0,r.jsx)(t.a,{href:"https://robot-framework.readthedocs.io/en/stable/autodoc/robot.result.html?highlight=Resultvisitor%20#module-robot.result.visitor",children:"documentation"})," for more possible entry points.",(0,r.jsx)(t.br,{}),"\n","While visiting the results, you will have full access to the Robot Framework ",(0,r.jsx)(t.a,{href:"https://robot-framework.readthedocs.io/en/stable/autodoc/robot.model.html#module-robot.model",children:"Model"})," and its objects.\r\nYou can easily read the status of a test or keyword, read its arguments or the elapsed execution time. Basically all data which is written into the ",(0,r.jsx)(t.code,{children:"output.xml"})," can be accessed via the model."]}),"\n",(0,r.jsx)(t.h2,{id:"reading-results-using-the-rf-api",children:"Reading results using the RF API"}),"\n",(0,r.jsxs)(t.p,{children:["Example which reads the execution time per test and sets the test status to failed,  in case the execution took longer than a defined value ",(0,r.jsx)(t.code,{children:"max_seconds"}),"."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"ExecutionTimeChecker.py"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"import sys\r\nfrom robot.api import ExecutionResult, ResultVisitor\r\n\r\n\r\nclass ExecutionTimeChecker(ResultVisitor):\r\n\r\n    def __init__(self, max_seconds):\r\n        self.max_milliseconds = max_seconds * 1000\r\n\r\n    def visit_test(self, test):\r\n        if test.status == 'PASS' and test.elapsedtime > self.max_milliseconds:\r\n            test.status = 'FAIL'\r\n            test.message = 'Test execution took too long.'\r\n\r\n\r\ndef check_tests(seconds, inpath, outpath=None):\r\n    result = ExecutionResult(inpath)\r\n    result.visit(ExecutionTimeChecker(float(seconds)))\r\n    result.save(outpath)\r\n\r\n\r\nif __name__ == '__main__':\r\n    try:\r\n        check_tests(*sys.argv[1:])\r\n    except TypeError:\r\n        print(__doc__)\n"})}),"\n",(0,r.jsx)(t.p,{children:"You can run the script from the terminal as shown below:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"python ExecutionTimeChecker.py 10 output.xml checked_output.xml\n"})}),"\n",(0,r.jsx)(t.h2,{id:"getting-result-statistics",children:"Getting result statistics"}),"\n",(0,r.jsx)(t.p,{children:"Simple example to read number of passed and failed tests"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'from robot.api import ExecutionResult\r\nresult = ExecutionResult(\'output.xml\')\r\nstats = result.statistics\r\nprint(f"Number of Failed Tests: {stats.total.failed}")\r\nprint(f"Total number of Tests: {stats.total.passed}")\n'})}),"\n",(0,r.jsxs)(t.p,{children:["You can also create a table in a markdown file ",(0,r.jsx)(t.code,{children:"report.md"}),"with the results."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'from robot.api import ExecutionResult, ResultVisitor\r\nimport sys\r\n\r\nclass MyResultVisitor(ResultVisitor):\r\n    def __init__(self, markdown_file=\'report.md\'):\r\n        self.failed_tests = []\r\n        self.passed_tests = []\r\n        self.markdown_file = markdown_file\r\n\r\n    def visit_test(self, test):\r\n        if test.status == \'FAIL\':\r\n            self.failed_tests.append(test.name)\r\n        elif test.status == \'PASS\':\r\n            self.passed_tests.append(test.name)\r\n\r\n    def end_result(self, result):\r\n        # Create a new markdown file\r\n        with open(self.markdown_file, "w") as f:\r\n            f.write("# Robot Framework Report\\n")\r\n            f.write("|Test|Status|\\n")\r\n            f.write("|---|---|\\n")\r\n            for test in self.passed_tests:\r\n                f.write(f"|{test}|PASS|\\n")\r\n            for test in self.failed_tests:\r\n                f.write(f"|{test}|FAIL|\\n")\r\n                \r\nif __name__ == \'__main__\':\r\n    try:\r\n        output_file = sys.argv[1]\r\n    except IndexError:\r\n        output_file = "output.xml"\r\n    try:\r\n        markdown_file = sys.argv[2]\r\n    except IndexError:\r\n        markdown_file = "report.md"\r\n    result = ExecutionResult(output_file)\r\n    result.visit(MyResultVisitor())\n'})}),"\n",(0,r.jsx)(t.p,{children:"That's how the result will look like:"}),"\n",(0,r.jsx)(t.h3,{id:"robot-framework-report",children:"Robot Framework Report"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Test"}),(0,r.jsx)(t.th,{children:"Status"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"My First Test Case"}),(0,r.jsx)(t.td,{children:"PASS"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"My Second Test Case As Keyword"}),(0,r.jsx)(t.td,{children:"PASS"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Some Other Test Case"}),(0,r.jsx)(t.td,{children:"PASS"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"A Failed Test Case"}),(0,r.jsx)(t.td,{children:"FAIL"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"more-information",children:"More information"}),"\n",(0,r.jsxs)(t.p,{children:["Check the ",(0,r.jsx)(t.a,{href:"https://robot-framework.readthedocs.io/en/stable/autodoc/robot.result.html?highlight=Resultvisitor%20#module-robot.result.visitor",children:"documentation"})]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>l});var r=s(6540);const n={},i=r.createContext(n);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);