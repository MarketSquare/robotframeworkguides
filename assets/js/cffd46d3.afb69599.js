"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5851],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?i.createElement(g,s(s({ref:t},c),{},{components:n})):i.createElement(g,s({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<a;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9420:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const a={},s="GitLab",o={unversionedId:"using_rf_in_ci_systems/ci/gitlab",id:"using_rf_in_ci_systems/ci/gitlab",title:"GitLab",description:"GitLab is a development platform that provides a Git repository manager providing wiki, issue-tracking and continuous integration and deployment pipeline features, using an open-source license, developed by GitLab Inc.",source:"@site/docs/using_rf_in_ci_systems/ci/gitlab.md",sourceDirName:"using_rf_in_ci_systems/ci",slug:"/using_rf_in_ci_systems/ci/gitlab",permalink:"/docs/using_rf_in_ci_systems/ci/gitlab",draft:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/using_rf_in_ci_systems/ci/gitlab.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u26d4 GitHub Actions",permalink:"/docs/using_rf_in_ci_systems/ci/github-actions"},next:{title:"Jenkins",permalink:"/docs/using_rf_in_ci_systems/ci/jenkins"}},l={},p=[{value:"Example",id:"example",level:2},{value:"Stages",id:"stages",level:2},{value:"Jobs",id:"jobs",level:2},{value:"Image",id:"image",level:2},{value:"Scripts",id:"scripts",level:2},{value:"Artifacts",id:"artifacts",level:2},{value:"Variables",id:"variables",level:2}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"gitlab"},"GitLab"),(0,r.kt)("p",null,"GitLab is a development platform that provides a Git repository manager providing wiki, issue-tracking and continuous integration and deployment pipeline features, using an open-source license, developed by GitLab Inc."),(0,r.kt)("p",null,"To set up a CI Pipeline which will run your (test) jobs on a GitLab Runner, you need to create a ",(0,r.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," file in the root of your repository. This file contains the configuration of your CI Pipeline."),(0,r.kt)("p",null,"A CI Pipeline is a set of ",(0,r.kt)("inlineCode",{parentName:"p"},"jobs")," that are executed in a specific order.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Stages")," are used to group ",(0,r.kt)("inlineCode",{parentName:"p"},"jobs")," together and to define the order in which they are executed."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"An example for a CI Pipeline using a Dockerimage which runs Robot Framework jobs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"stages:\n  - smoke\n  - regression\n\nimage: marketsquare/robotframework-browser\n\nrun-smoke-tests:\n  stage: smoke\n  script:\n    - robot --outputdir reports tests/smoke\n  artifacts:\n    paths:\n      - reports\n\nrun-regression-tests:\n    stage: regression\n    script:\n        - robot --outputdir reports tests/regression\n    artifacts:\n        paths:\n            - reports\n")),(0,r.kt)("h2",{id:"stages"},"Stages"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"stages:\n  - smoke\n  - regression\n")),(0,r.kt)("p",null,"The Pipeline has two stages: ",(0,r.kt)("inlineCode",{parentName:"p"},"smoke")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"regression"),".",(0,r.kt)("br",{parentName:"p"}),"\n","The ",(0,r.kt)("inlineCode",{parentName:"p"},"smoke")," stage will be executed first, followed by the ",(0,r.kt)("inlineCode",{parentName:"p"},"regression")," stage.",(0,r.kt)("br",{parentName:"p"}),"\n","Each stage can contain multiple jobs which will be executed in parallel (within the same stage)."),(0,r.kt)("h2",{id:"jobs"},"Jobs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"run-smoke-tests:\n  stage: smoke\n  ...\n\nrun-regression-tests:\n  stage: regression\n  ...\n")),(0,r.kt)("p",null,"The job ",(0,r.kt)("inlineCode",{parentName:"p"},"run-smoke-tests")," is part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"smoke")," stage.",(0,r.kt)("br",{parentName:"p"}),"\n","The job ",(0,r.kt)("inlineCode",{parentName:"p"},"run-regression-tests")," is part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"regression")," stage.  "),(0,r.kt)("p",null,"Each job can contain multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"scripts")," which will be executed in sequence.",(0,r.kt)("br",{parentName:"p"}),"\n","The scripts are executed in the (Docker)",(0,r.kt)("inlineCode",{parentName:"p"},"image")," specified in the configuration."),(0,r.kt)("h2",{id:"image"},"Image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"image: marketsquare/robotframework-browser\n")),(0,r.kt)("p",null,"The image is used to run the jobs in the CI Pipeline. It is possible to use a different image for each job. The ",(0,r.kt)("inlineCode",{parentName:"p"},"image")," specified at the top of the configuration is used as the default image for all jobs (unless a job-specific image is specified).",(0,r.kt)("br",{parentName:"p"}),"\n","The default image used here is ",(0,r.kt)("inlineCode",{parentName:"p"},"marketsquare/robotframework-browser"),"."),(0,r.kt)("h2",{id:"scripts"},"Scripts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"script:\n  - robot --outputdir reports tests/smoke\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"script")," is a list of commands that will be executed in sequence for the job.",(0,r.kt)("br",{parentName:"p"}),"\n","The ",(0,r.kt)("inlineCode",{parentName:"p"},"script")," specified here will run the Robot Framework tests in the ",(0,r.kt)("inlineCode",{parentName:"p"},"tests/smoke")," folder and will output the results in the ",(0,r.kt)("inlineCode",{parentName:"p"},"reports")," folder.",(0,r.kt)("br",{parentName:"p"}),"\n","It is possible to use multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"script")," commands in a job."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"script:\n  - pip install -r requirements.txt\n  - mkdir reports\n  - robot --outputdir reports tests/smoke\n")),(0,r.kt)("h2",{id:"artifacts"},"Artifacts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},"artifacts:\n  paths:\n    - reports\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"artifacts")," section is used to specify the files and folders that should be stored as artifacts after the job has finished.",(0,r.kt)("br",{parentName:"p"}),"\n","For example, you can store the test results (like the ",(0,r.kt)("inlineCode",{parentName:"p"},"log.html")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"report.html")," files) as artifacts.",(0,r.kt)("br",{parentName:"p"}),"\n","Here, the ",(0,r.kt)("inlineCode",{parentName:"p"},"reports")," folder is stored as an artifact. It contains all the test results and screenshots.",(0,r.kt)("br",{parentName:"p"}),"\n","That's possible, because the ",(0,r.kt)("inlineCode",{parentName:"p"},"--outputdir")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"robot")," command was set to ",(0,r.kt)("inlineCode",{parentName:"p"},"reports"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"robot --outputdir reports tests/smoke\n")),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".gitlab-ci.yml"',title:'".gitlab-ci.yml"'},'variables:\n  ROBOT_OPTIONS: "--variable BROWSER:chrome"\n\nrun-smoke-tests:\n    stage: smoke\n    script:\n        - robot --outputdir reports $ROBOT_OPTIONS tests/smoke\n    artifacts:\n        paths:\n        - reports\n')),(0,r.kt)("p",null,"It is possible to define variables in the configuration, either at the top of the file or in a job.",(0,r.kt)("br",{parentName:"p"}),"\n","Also ",(0,r.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/ci/variables/predefined_variables.html"},"predefined GitLab variables")," or variables defined for your project settings can be used.",(0,r.kt)("br",{parentName:"p"}),"\n","Especially for handling secrets, it is recommended to use ",(0,r.kt)("inlineCode",{parentName:"p"},"CI Variables")," in your project settings.  "),(0,r.kt)("p",null,"Check out the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/ci/variables/"},"GitLab CI Variables")," documentation for more information."))}m.isMDXComponent=!0}}]);