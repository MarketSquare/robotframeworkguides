"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4968],{6491:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=r(4848),n=r(8453);const o={},i="Robot Framework API",l={id:"extending_robot_framework/listeners_prerun_api/rf-api",title:"Robot Framework API",description:"What is the Robot Framework API?",source:"@site/docs/extending_robot_framework/listeners_prerun_api/rf-api.md",sourceDirName:"extending_robot_framework/listeners_prerun_api",slug:"/extending_robot_framework/listeners_prerun_api/rf-api",permalink:"/docs/extending_robot_framework/listeners_prerun_api/rf-api",draft:!1,unlisted:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/extending_robot_framework/listeners_prerun_api/rf-api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PreRunModifier",permalink:"/docs/extending_robot_framework/listeners_prerun_api/prerunmodifier"},next:{title:"Re-Execute failed tests",permalink:"/docs/flaky_tests"}},a={},d=[{value:"What is the Robot Framework API?",id:"what-is-the-robot-framework-api",level:2},{value:"Run Robot Framework from Python",id:"run-robot-framework-from-python",level:2},{value:"Access and Modify Robot Framework Objects",id:"access-and-modify-robot-framework-objects",level:2},{value:"Execution Results",id:"execution-results",level:3},{value:"Access Execution Results after a Test Run",id:"access-execution-results-after-a-test-run",level:4},{value:"Print the number of passed and failed tests",id:"print-the-number-of-passed-and-failed-tests",level:5},{value:"Write the test name and status to a markdown file",id:"write-the-test-name-and-status-to-a-markdown-file",level:5},{value:"Robot Framework Report",id:"robot-framework-report",level:6},{value:"Access Execution Results returned by the <code>run</code> function",id:"access-execution-results-returned-by-the-run-function",level:4}];function c(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"robot-framework-api",children:"Robot Framework API"}),"\n",(0,s.jsx)(t.h2,{id:"what-is-the-robot-framework-api",children:"What is the Robot Framework API?"}),"\n",(0,s.jsx)(t.p,{children:"The Robot Framework API allows us to do two main things."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Run commands like ",(0,s.jsx)(t.code,{children:"robot"})," and ",(0,s.jsx)(t.code,{children:"rebot"})," from Python scripts"]}),"\n",(0,s.jsxs)(t.li,{children:["Access and modify all kinds of Robot Framework objects , e.g.","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Execution Results"}),"\n",(0,s.jsx)(t.li,{children:"Test Suites"}),"\n",(0,s.jsx)(t.li,{children:"Parsers"}),"\n",(0,s.jsx)(t.li,{children:"Logger"}),"\n",(0,s.jsx)(t.li,{children:"Result Writer"}),"\n",(0,s.jsx)(t.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Check out the ",(0,s.jsx)(t.a,{href:"https://robot-framework.readthedocs.io/en/master/index.html#module-robot.api",children:"Public API"})," and ",(0,s.jsx)(t.a,{href:"https://robot-framework.readthedocs.io/en/master/index.html#entry-points",children:"Entry Points"})," for more information."]}),"\n",(0,s.jsxs)(t.p,{children:["You can use the API to build your own tools or integrate Robot Framework with other tools.",(0,s.jsx)(t.br,{}),"\n","Examples are"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Integrating Robot Framework with (Test Management) Tools like Jira or TestRail"}),"\n",(0,s.jsx)(t.li,{children:"Building your own Test Runner in Python"}),"\n",(0,s.jsxs)(t.li,{children:["Create tools for analyzing and refactoring Robot Framework Tests (like ",(0,s.jsx)(t.code,{children:"robotidy"})," or ",(0,s.jsx)(t.code,{children:"robocop"}),")"]}),"\n",(0,s.jsx)(t.li,{children:"Create UIs for Robot Framework"}),"\n",(0,s.jsx)(t.li,{children:"Create Tools to distribute Robot Framework Tests"}),"\n",(0,s.jsx)(t.li,{children:"Create Web Services for Robot Framework"}),"\n",(0,s.jsx)(t.li,{children:"..."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Use your imagination \ud83e\udd84"}),"\n",(0,s.jsx)(t.h2,{id:"run-robot-framework-from-python",children:"Run Robot Framework from Python"}),"\n",(0,s.jsx)(t.p,{children:"Usually, we run Robot Framework from the command line."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"robot tests.robot\n"})}),"\n",(0,s.jsxs)(t.p,{children:["We often pass some arguments to the command, like ",(0,s.jsx)(t.code,{children:"--variable"})," or ",(0,s.jsx)(t.code,{children:"--outputdir"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"robot --variable BROWSER:chrome --outputdir results tests.robot\n"})}),"\n",(0,s.jsx)(t.p,{children:"But we can also run Robot Framework from Python scripts."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"from robot import run\n\nrun('tests.robot', variable=['BROWSER:chrome'], outputdir='results')\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"run"})," function takes the same arguments as the ",(0,s.jsx)(t.code,{children:"robot"})," command."]}),"\n",(0,s.jsxs)(t.p,{children:["Check out the command-line options in the ",(0,s.jsx)(t.a,{href:"https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#command-line-options",children:"Robot Framework User Guide"})," for more information."]}),"\n",(0,s.jsxs)(t.p,{children:["The only difference when using the ",(0,s.jsx)(t.code,{children:"run"})," function is"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["we don't need to prefix the arguments with ",(0,s.jsx)(t.code,{children:"--"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["e.g. ",(0,s.jsx)(t.code,{children:"--variable"})," becomes ",(0,s.jsx)(t.code,{children:"variable"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["boolean arguments like ",(0,s.jsx)(t.code,{children:"--dryrun"})," or ",(0,s.jsx)(t.code,{children:"--exitonfailure"})," need to be set to ",(0,s.jsx)(t.code,{children:"True"}),"(or ",(0,s.jsx)(t.code,{children:"False"}),")","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["e.g. ",(0,s.jsx)(t.code,{children:"--dryrun"})," becomes ",(0,s.jsx)(t.code,{children:"dryrun=True"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["options which can be specified multiple times (like ",(0,s.jsx)(t.code,{children:"--variable"}),") need to be passed as a list","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["e.g. ",(0,s.jsx)(t.code,{children:"--variable BROWSER:chrome --variable URL:https://www.google.com"})," becomes ",(0,s.jsx)(t.code,{children:"variable=['BROWSER:chrome', 'URL:https://www.google.com']"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["If you prefer the command line syntax, you can use the ",(0,s.jsx)(t.code,{children:"robot.run_cli"})," function."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"from robot import run_cli\n\nrc = run_cli(['--variable', 'BROWSER:chrome', '--outputdir', 'results', 'tests.robot'])\n"})}),"\n",(0,s.jsx)(t.h2,{id:"access-and-modify-robot-framework-objects",children:"Access and Modify Robot Framework Objects"}),"\n",(0,s.jsx)(t.h3,{id:"execution-results",children:"Execution Results"}),"\n",(0,s.jsx)(t.h4,{id:"access-execution-results-after-a-test-run",children:"Access Execution Results after a Test Run"}),"\n",(0,s.jsxs)(t.p,{children:["After a test run, we can access the execution results with the ",(0,s.jsx)(t.code,{children:"ExecutionResult"})," object."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ExecutionResult"})," object is returned by the ",(0,s.jsx)(t.code,{children:"run"})," function or can be created from an ",(0,s.jsx)(t.code,{children:"output.xml"})," file."]}),"\n",(0,s.jsx)(t.h5,{id:"print-the-number-of-passed-and-failed-tests",children:"Print the number of passed and failed tests"}),"\n",(0,s.jsx)(t.p,{children:"The example below shows how to print the number of passed and failed tests."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'from robot.api import ExecutionResult\nresult = ExecutionResult(\'output.xml\')\nstats = result.statistics\nprint(f"Number of Failed Tests: {stats.failed}")\nprint(f"Total number of Tests: {stats.passed}")\n'})}),"\n",(0,s.jsx)(t.h5,{id:"write-the-test-name-and-status-to-a-markdown-file",children:"Write the test name and status to a markdown file"}),"\n",(0,s.jsxs)(t.p,{children:["You can combine the ",(0,s.jsx)(t.code,{children:"ExecutionResult"})," object with the ",(0,s.jsx)(t.a,{href:"https://robot-framework.readthedocs.io/en/stable/autodoc/robot.result.html?highlight=Resultvisitor%20#module-robot.result.visitor",children:"ResultVisitor"})," class to access the results in a structured way."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"ResultVisitor"}),' class will allow you to "walk" through the results and react to certain events (similar to the ',(0,s.jsx)(t.a,{href:"/docs/extending_robot_framework/listeners_prerun_api/listeners",children:"Listener"}),")"]}),"\n",(0,s.jsx)(t.p,{children:"The example below will visit all tests and write the test name and status to a markdown file."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",metastring:'title="report.py"',children:'from robot.api import ExecutionResult, ResultVisitor\nimport sys\n\nclass MyResultVisitor(ResultVisitor):\n    def __init__(self, markdown_file=\'report.md\'):\n        self.failed_tests = []\n        self.passed_tests = []\n        self.markdown_file = markdown_file\n\n    def visit_test(self, test):\n        if test.status == \'FAIL\':\n            self.failed_tests.append(test.name)\n        elif test.status == \'PASS\':\n            self.passed_tests.append(test.name)\n\n    def end_result(self, result):\n        # Create a new markdown file\n        with open(self.markdown_file, "w") as f:\n            f.write("# Robot Framework Report\\n")\n            f.write("|Test|Status|\\n")\n            f.write("|---|---|\\n")\n            for test in self.passed_tests:\n                f.write(f"|{test}|PASS|\\n")\n            for test in self.failed_tests:\n                f.write(f"|{test}|FAIL|\\n")\n                \nif __name__ == \'__main__\':\n    try:\n        output_file = sys.argv[1]\n    except IndexError:\n        output_file = "output.xml"\n    try:\n        markdown_file = sys.argv[2]\n    except IndexError:\n        markdown_file = "report.md"\n    result = ExecutionResult(output_file)\n    result.visit(MyResultVisitor())\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"python report.py output.xml report.md\n"})}),"\n",(0,s.jsx)(t.p,{children:"That's how the result will look like:"}),"\n",(0,s.jsx)(t.h6,{id:"robot-framework-report",children:"Robot Framework Report"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Test"}),(0,s.jsx)(t.th,{children:"Status"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"My First Test Case"}),(0,s.jsx)(t.td,{children:"PASS"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"My Second Test Case As Keyword"}),(0,s.jsx)(t.td,{children:"PASS"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Some Other Test Case"}),(0,s.jsx)(t.td,{children:"PASS"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"A Failed Test Case"}),(0,s.jsx)(t.td,{children:"FAIL"})]})]})]}),"\n",(0,s.jsxs)(t.h4,{id:"access-execution-results-returned-by-the-run-function",children:["Access Execution Results returned by the ",(0,s.jsx)(t.code,{children:"run"})," function"]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"run"})," function returns an ",(0,s.jsx)(t.code,{children:"ExecutionResult"})," object."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"from robot import run\n\nresult = run('tests.robot', variable=['BROWSER:chrome'], outputdir='results')\n\nprint(result.suite.name)\nstats = result.statistics\nprint(f\"Number of Failed Tests: {stats.failed}\")\nprint(f\"Total number of Tests: {stats.passed}\")\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var s=r(6540);const n={},o=s.createContext(n);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);