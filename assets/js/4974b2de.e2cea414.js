"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9918],{5012:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>h});var s=t(4848),i=t(8453);const r={},o="Jenkins",a={id:"using_rf_in_ci_systems/ci/jenkins",title:"Jenkins",description:"Jenkins is an open source automation server, which allows you to integrate into",source:"@site/docs/using_rf_in_ci_systems/ci/jenkins.md",sourceDirName:"using_rf_in_ci_systems/ci",slug:"/using_rf_in_ci_systems/ci/jenkins",permalink:"/docs/using_rf_in_ci_systems/ci/jenkins",draft:!1,unlisted:!1,editUrl:"https://github.com/MarketSquare/robotframeworkguides/edit/main/website/docs/using_rf_in_ci_systems/ci/jenkins.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GitLab",permalink:"/docs/using_rf_in_ci_systems/ci/gitlab"},next:{title:"\u26d4 TeamCity",permalink:"/docs/using_rf_in_ci_systems/ci/teamcity"}},l={},h=[{value:"Examples",id:"examples",level:2},{value:"Jenkinsfile with a stage <strong>Run Robot</strong>",id:"jenkinsfile-with-a-stage-run-robot",level:3},{value:"Jenkinsfile with parameters and multiple stages",id:"jenkinsfile-with-parameters-and-multiple-stages",level:3},{value:"Special notes about running tests with Browser library behind firewall",id:"special-notes-about-running-tests-with-browser-library-behind-firewall",level:2},{value:"Preparing the Jenkins agent",id:"preparing-the-jenkins-agent",level:3},{value:"Preparing the Jenkins configuration file",id:"preparing-the-jenkins-configuration-file",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"jenkins",children:"Jenkins"}),"\n",(0,s.jsx)(n.p,{children:"Jenkins is an open source automation server, which allows you to integrate into\nmultiple different tools and platforms with various plugins."}),"\n",(0,s.jsxs)(n.p,{children:["In order to run ",(0,s.jsx)(n.strong,{children:"jobs"}),", you need a ",(0,s.jsx)(n.strong,{children:"Jenkinsfile"})," written in Groovy. Each Jenkinsfile has some\n",(0,s.jsx)(n.strong,{children:"stages"}),", which contain one or more ",(0,s.jsx)(n.strong,{children:"steps"}),". Each job is run on some ",(0,s.jsx)(n.strong,{children:"node"}),"\n(or ",(0,s.jsx)(n.strong,{children:"agent"}),"), which contains all the necessary software to run your job."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to run Robot Framework in your Jenkins job, you need to have ",(0,s.jsx)(n.code,{children:"robotframework"})," installed\non the executing node. If you then want to publish your results, so that they are viewable\nin Jenkins, use the ",(0,s.jsx)(n.a,{href:"https://plugins.jenkins.io/robot/",children:"Robot Framework plugin"}),". To get the most\nout of the plugin, please refer to the official plugin documentation."]}),"\n",(0,s.jsxs)(n.p,{children:["By default, Jenkins won't allow you to open log files in the Jenkins UI. To allow this, you need\nto ",(0,s.jsx)(n.a,{href:"https://plugins.jenkins.io/robot/#plugin-content-log-file-not-showing-properly",children:"change your CSP settings"}),".\nHowever, please note that ",(0,s.jsx)(n.strong,{children:"changing your CSP settings will potentially expose your Jenkins instance\nfor security vulnerabilities."})]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.h3,{id:"jenkinsfile-with-a-stage-run-robot",children:["Jenkinsfile with a stage ",(0,s.jsx)(n.strong,{children:"Run Robot"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-groovy",children:'pipeline {\n    agent { label "robot" } // run on an agent, which has Robot Framework installed\n\n    stages {\n        stage("Run Robot") {\n            steps {\n                // --nostatusrc prevents your job from failing automatically if any\n                // tests fail. This is then later handled with the RF plugin with\n                // pass thresholds\n                sh script: "robot --nostatusrc my_tests.robot", returnStatus: true\n            }\n        }\n    }\n\n    post {\n        always {\n            robot outputPath: \'.\', passThreshold: 80.0, unstableThreshold: 70.0\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"jenkinsfile-with-parameters-and-multiple-stages",children:"Jenkinsfile with parameters and multiple stages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-groovy",children:"pipeline {\n    properties([\n            parameters([\n                    choice(choices: ['test','staging'], description: 'Environment to run the tests against', name: 'environment'),\n                    string(name: 'INCLUDE', defaultValue: 'valid_loginORinvalid_login', description: 'Specify which tags you want to run (e.g. valid_login)'),\n                    string(name: 'EXCLUDE', description: 'Specify if you want to exclude tests by category tags'),\n                    string(name: 'FOLDER', defaultValue: 'tests', description: 'Specify the folder for tests (e.g. . for current dir'),\n                    string(name: 'BRANCH', defaultValue: 'main', description: 'Specify the branch for tests (e.g. main')\n            ])\n    ])\n\n    // -- Script arguments --------------------------------\n    def include = \"${params.INCLUDE}\"\n    def exclude = \"${params.EXCLUDE}\"\n    def folder = \"${params.FOLDER}\"\n    def branch = \"${params.BRANCH}\"\n    def args = \"\"\n    // ----------------------------------------------------\n\n    agent { label 'robot' } // how is your Jenkins agent labeled, so that right kind of agent is used for execution\n\n    stages {\n        stage('Checkout') {\n            steps {\n                script {\n                    // checkout your code here\n                }\n            }\n        }\n        stage('Define args') {\n            steps {\n                script {\n                    if (!include.isEmpty()) {\n                        args += \" -i $include\"\n                    }\n                    if (!exclude.isEmpty()) {\n                        args += \" -e $exclude\"\n                    }\n                    if (!folder.isEmpty()) {\n                        args += \" $folder\"\n                    } else {\n                        args += \" .\"\n                    }\n                }\n            }\n        }\n        stage('Run Robot tests') {\n            steps {\n                sh \"\"\"\n                    robot -d test_results ${args}   # etc.\n                \"\"\"\n            }\n            post {\n                always {\n                    // Note! Careful not to mix the Jenkins `robot` step with the `robot` command run inside the previous\n                    // `sh` step! The `robot` step _only_ publishes the results for Jenkins and the `robot` command\n                    // inside `sh` step runs the tests!\n                    robot(\n                        outputPath          : 'test_results',\n                        outputFileName      : \"output.xml\",\n                        reportFileName      : 'report.html',\n                        logFileName         : 'log.html',\n                        disableArchiveOutput: false,\n                        passThreshold       : 95.0,\n                        unstableThreshold   : 95.0,\n                        otherFiles          : \"**/*.png\",\n                    )\n                }\n            }\n        }\n        // Other stages...\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"special-notes-about-running-tests-with-browser-library-behind-firewall",children:"Special notes about running tests with Browser library behind firewall"}),"\n",(0,s.jsx)(n.p,{children:"This is related especially to the use of Browser library which requires installations and initialisation to be done before the tests can be executed."}),"\n",(0,s.jsx)(n.h3,{id:"preparing-the-jenkins-agent",children:"Preparing the Jenkins agent"}),"\n",(0,s.jsx)(n.p,{children:"These are steps that needs to be done by the person administrating the Jenkins agents."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Install all the tools that are needed for running the tests: nodejs, python 3.x, Robot Framework, Browser library"}),"\n",(0,s.jsxs)(n.li,{children:["Set ",(0,s.jsx)(n.code,{children:"PLAYWRIGHT_BROWSERS_PATH"})," to point where you want to install browsers"]}),"\n",(0,s.jsxs)(n.li,{children:["Execute ",(0,s.jsx)(n.code,{children:"rfbrowser init"})," to get the base setup for Browser library. Note that you still need to execute it with Jenkins user as well, see below."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"preparing-the-jenkins-configuration-file",children:"Preparing the Jenkins configuration file"}),"\n",(0,s.jsx)(n.p,{children:'These are steps you need to have in your Jenkins configuration. I recommend putting those as commands in the same shell command set together with test execution ("command to run your tests")'}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"npm config set registry https://local-site-for-node-modules"})," <-- here you need a server that is providing all required node modules; if it doesn't exist proxy config might work as well"]}),"\n",(0,s.jsxs)(n.li,{children:["Additional commands that might be needed could be ",(0,s.jsx)(n.code,{children:"npm config set strict-ssl false"})," or ",(0,s.jsx)(n.code,{children:"npm config set always-auth true"})," depending how the server is configured"]}),"\n",(0,s.jsxs)(n.li,{children:["Then run ",(0,s.jsx)(n.code,{children:"rfbrowser init --skip-browsers"})," to avoid the installation of browsers that may appear hard over the firewall"]}),"\n",(0,s.jsxs)(n.li,{children:["... and use instead the ones installed by root when the agent was initialised by pointing with ",(0,s.jsx)(n.code,{children:"PLAYWRIGHT_BROWSERS_PATH"})," to the location defined"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Now you should be ready to execute tests."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);